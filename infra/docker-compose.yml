version: '3.8'
services:

  db:
    image: postgres:15.3-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
    image: snoopyaizek/foodgram_backend:v1
    # build:
    #   context: ../backend
    #   dockerfile: Dockerfile
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    image: snoopyaizek/foodgram_frontend:v1
    # build:
    #   context: ../frontend
    #   dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - web

  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    restart: always
    depends_on:
      - frontend

volumes:
  static_value:
  media_value:
